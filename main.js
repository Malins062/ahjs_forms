(()=>{"use strict";class t{constructor(t,e,n,o){this.parentEl=t,this.text=e,this.title=n,this.content=o}get markup(){return`\n        <button type="button" class="btn btn-lg btn-danger" data-bs-toggle="popover-hint" id="popover-button" data-bs-placement="top"\n            data-bs-title="${this.title}" data-bs-content="${this.content}">\n            ${this.text}\n        </button>\n        <div class="popover hidden" role="tooltip" id="popover-hint" \n          data-popper-placement="top">\n          <div class="popover-arrow" style="position: absolute; left: 0px; transform: translate(47px, 0px);"></div>\n          <h3 class="popover-header">${this.title}</h3>\n          <div class="popover-body">${this.content}</div>\n        </div>\n    `}static get buttonSelector(){return"[id=popover-button]"}static get hintSelector(){return"[id=popover-hint]"}bindToDOM(){this.parentEl.innerHTML=this.markup,this.parentEl.querySelector(t.buttonSelector).addEventListener("click",(t=>this.onClick(t)))}toggleHint(){const e=document.querySelector(t.hintSelector),n=document.querySelector(t.buttonSelector);e.classList.toggle("hidden");const o=e.getBoundingClientRect(),i=n.getBoundingClientRect();e.style.top=i.top-o.height+"px",e.style.left=i.left+i.width/2-o.width/2+"px"}onClick(t){t.preventDefault(),this.toggleHint()}}new t(document.querySelector("#widget-container"),"Click to toggle popover","Popover title","And here's some amazing content. It's very engaging. Right?").bindToDOM()})();